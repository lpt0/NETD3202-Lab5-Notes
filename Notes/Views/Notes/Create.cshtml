@model Notes.Models.Note

@{
    /** Create.cshtml
     *
     * This page allows a user to create a new note.
     * A name for the note, the user that created the note, and optionally, 
     * a description of the note and the group that this note is a part of
     * can all be specified, along with the actual contents of the note.
     * 
     * 
     * Author: Haran
     * Date: December 6th, 2020
     */
    ViewData["Title"] = "Create a new note";
}

<!-- Same as title -->
<h1>@ViewData["Title"]</h1>
<hr />
<div>
    <!-- Page layout similar to viewing a note, for consistency -->
    <!-- Form to POST the note and create it -->
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" placeholder="Name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Description" class="control-label"></label>
            <input asp-for="Description" class="form-control" placeholder="Description (optional)" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <!-- Instead of allowing the user to pick a user that created the 
             note, the backend will check the logged in user and create the 
             note for that user. -->
        <div class="form-group">
            <label asp-for="GroupId" class="control-label">Group (optional)</label>
            <select asp-for="GroupId" class="form-control" asp-items="ViewBag.GroupId">
                <!-- Add a default element, in case the user does not want to pick a group -->
                <option selected value=""></option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="Content" class="control-label">Content</label>
            <!-- Text area for the content 
                 The form control will round the corners of the text area, 
                 which fits with the other inputs -->
            <textarea asp-for="Content" class="note-content form-control"></textarea>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>
        <div class="form-group">
            <!-- Using an outline instead of a regular button, so it doesn't pop out and distract the user while writing a note -->
            <input type="submit" value="Create" class="btn btn-outline-primary" />
        </div>
    </form>
</div>

<div>
    <!-- I like the way that the outline buttons look -->
    <a class="btn btn-outline-primary" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
