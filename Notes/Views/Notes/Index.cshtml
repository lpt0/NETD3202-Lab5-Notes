@model IEnumerable<Notes.Models.Note>

@{
    /** TODO */
    ViewData["Title"] = "All notes";
}

<h1>All notes</h1>

<p>
    View a note by clicking on its name. Click on the username to be taken to a list with all of that user's notes, 
    or the group name to view all notes under that group.
</p>
<p>
    <!-- I have the create button at the top instead of at the end of the
         table, since there may be a lot of notes and I don't feel like 
         scrolling all the way down. 
         I'm not using an outline button here because I want the create 
         button to stick out, and so the user can easily find this -->
    <a class="btn btn-primary" asp-action="Create">Create</a>
</p>
<!-- Having table-hover means that hovering over rows will change the style of them -->
<table class="table table-hover">
    <!-- Table header -->
    <thead class="thead-dark">
        <!-- Show all notes by default, since anonymous access is enabled -->
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <!-- Not showing the content field since it can be very long -->
            <th>
                <!-- Using a custom display name here -->
                Created by
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Group)
            </th>
            <!-- Blank heading for actions -->
            <th></th>
        </tr>
    </thead>
    <!-- Go through and show all notes in the database; the HTML elements will be repeated for *every* note -->
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <!-- Have the note name also be the link to it 
                     This can be done by using the `asp-route-id` attribute
                     and the `asp-action` attribute together, which will take
                     care of linking to the right page -->
                <a class="table-anchor" asp-action="Details" asp-route-id="@item.Id">
                    @Html.DisplayFor(modelItem => item.Name)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <!-- Link to the user -->
                <a class="table-anchor" asp-controller="Users" asp-action="Details" asp-route-id="@item.User.Id">
                    @Html.DisplayFor(modelItem => item.User.Username)
                </a>
            </td>
            <!-- Again, not showing content since it can be long -->
            <td>
                @{ 
                    // check if there is a group; otherwise do nothing
                    if (item.GroupId != null)
                    {
                        // there is a group, so display a link to its details
                        <a asp-controller="Groups" asp-action="Details" asp-route-id="@item.GroupId">
                            @Html.DisplayFor(modelItem => item.Group.Name)
                        </a>
                    }
                }
            </td>
            <td>
                <!-- I am including a view button as well, because the other 
                     buttons draw more attention that clicking on the note name.
                     It all depends on where the user is looking, so better
                     to have two ways to access it -->
                <a class="btn btn-outline-success" asp-action="Details" asp-route-id="@item.Id">View</a>
                <!-- A link to edit the note, or delete it -->
                <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
